import javax.swing.JApplet;
import javax.swing.JProgressBar;
import javax.swing.JTextField;
import javax.swing.JTextArea;
import javax.swing.SwingWorker;
import javax.swing.JScrollPane;

import java.awt.BorderLayout;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

public class Applet extends JApplet
{
	private JProgressBar bar; 
	private JTextArea area;
	private JTextField field;
	public Applet()
	{
		bar=new JProgressBar();
		bar.setStringPainted(true);
		
		area=new JTextArea();
		area.setWrapStyleWord(true);
		area.setLineWrap(true);
		
		field=new JTextField();
		
		this.add(bar,BorderLayout.NORTH);
		this.add(new JScrollPane(area),BorderLayout.CENTER);
		this.add(field,BorderLayout.SOUTH);
		field.addActionListener(
		                            new ActionListener()
									{
										public void actionPerformed(ActionEvent e)
										{
											ComputePrime task=new ComputePrime(Integer.parseInt(field.getText()),area);
											task.addPropertyChangeListener(
											                                    new PropertyChangeListener()
																				{
																					public void propertyChange(PropertyChangeEvent e)
																					{
																						if("progress".equals(e.getPropertyName()))
																						{
																							bar.setValue((Integer)e.getNewValue());
																							//System.out.println("48---");
																						}

																					}
																					
																				}
											                              );
											task.execute();
										}
									}
		                       );
	}
	private static class ComputePrime extends SwingWorker<Integer,Integer>
	{
		private int count;
		private JTextArea area;
		public ComputePrime(int count,JTextArea area)
		{
			this.count=count;
			this.area=area;
		}
		protected Integer doInBackground()
		{
			this.publishPrime(count);
			return 0;
		}
		protected void process(java.util.List<Integer> list)
		{
			for(int i=0;i<list.size();i++)
				area.append(list.get(i)+"  ");
		}
		private void publishPrime(int n)
		{
			int count=0;
			int number=2;
			while(count<n)
			{
				if(this.isPrime(number))
				{
					this.publish(number);
					count++;
					int value=(int)(count*100.0/n);// 浮点数保证精度,然后数值扩大一百倍
					//System.out.println("90---"+value);
					setProgress(value);     ///////////
				}
				number++;
			}
		}
		private boolean isPrime(int x)
		{
			for(int i=2;i<=x/2;i++)
			{
				if(x%i==0)
					return false;
			}
			return true;
		}
	}
} 