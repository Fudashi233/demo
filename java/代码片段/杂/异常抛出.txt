// MyExceptionDemo.java
class MyException extends Exception { //继承了Exception这个父类
         private int detail;
         MyException(int a) {
                   detail = a;
         }
         public String toString() {
                   return"MyException[" + detail + "]";
         }
}
 
public class a{
         static void compute(int a) throws MyException {
                   System.out.println("调用 compute(" + a + ")");
                   if(a > 10){ //a大于10，则抛出异常
                            throw new MyException(a);
                   }
                   System.out.println("常规退出 ");
         }
         public static void main(String args[]){
                   try {
                            compute(1);              //a小于10，常规退出
                            compute(20);   //a大于10，则抛出异常
                   }
                   catch (MyException e) {
                            System.out.println("捕捉 " + e); //这样就可以用自己定义的类来捕捉异常了
                   }
         }
}




import java.util.Scanner;
public class a
{
	public static void main(String[] args)//throws NumberBoundException
	{
		Scanner input=new Scanner(System.in);
        int a=input.nextInt();
		try
		{
			func(a);	
		}
		catch(NumberBoundException ex)
		{
			System.out.println(ex);
		}
	}
	public static void func(int x) throws Exception
	{
        NumberBoundException b=new NumberBoundException(1,10,"Over Bound");
			if(x>=b.numMin_&&x<=b.numMax_)
				System.out.println("Ok!!");
			else
				throw new NumberBoundException(1,10,"jahha");
	}
}
class NumberBoundException extends Exception
{
	public int numMin_;
	public int numMax_;
	public NumberBoundException()
	{
		super("Over Bound");
		numMin_=0;
		numMax_=1;
	}
	public NumberBoundException(int min,int max,String s)
	{
		super(s);
		numMin_=min;
		numMax_=max;
	}
}














/////+
public class a
{
	public static void main(String[] args)
	{
		int a=0,b=0;
		try{
			
 		if(DigitException.judge(args[0])&&(DigitException.judge(args[1])))
		{
			a=Integer.parseInt(args[0]);
			b=Integer.parseInt(args[1]);
			System.out.println(a+b);
 		}
		else
			throw new DigitException("adwa sb");
		}
		catch(DigitException ex)
		{
			System.out.println(ex);
		}
	}
}
class DigitException extends Exception
{
	boolean flag;
	DigitException()
	{
		super("Not Digit");
	}
	DigitException(String s)
	{
		super(s);
	}
	static boolean judge(String s)
	{
		int i=0;
		for( ;i<s.length();i++)
		{
			if(!(Character.isDigit(s.charAt(i))))
				break;				
		}
		if(i==s.length())
			return true;
		else
			return false;
	}
}