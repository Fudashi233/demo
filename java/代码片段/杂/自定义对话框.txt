import javax.swing.JDialog;
import javax.swing.JSlider;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.BorderFactory;
import javax.swing.event.ChangeListener;
import javax.swing.event.ChangeEvent;
import javax.swing.JFrame;

import java.awt.GridLayout;
import java.awt.FlowLayout;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
public class MyApplet
{
	public static void main(String[] args)
	{
		ColorDialog dialog=new ColorDialog();
		JButton button=new JButton("Choose Color");
		JPanel p1=new JPanel();
		p1.add(button);
		button.addActionListener(
		                            new ActionListener()
									{
										public void actionPerformed(ActionEvent e)
										{
											dialog.setVisible(true);
											p1.setBackground(dialog.getColor());
										}
									}
		                        );
		JFrame frame=new JFrame("Windows");
		frame.add(p1);
		frame.setSize(300,400);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setLocationRelativeTo(null);
		frame.setVisible(true);
	}
}

class ColorDialog extends JDialog
{
	private JSlider red;
	private JSlider blue;
	private JSlider green;
	private JButton jbtOk;
	private JButton jbtCancel;
	private int redValue,greenValue,blueValue;
	private Color color;
	public ColorDialog()
	{
		this(null,true);
	}
	public ColorDialog(JFrame parent,boolean model)//Frame===>JFrame??
	{
		super(parent,model);
		this.setTitle("choose color");
		redValue=0;
		greenValue=0;
		blueValue=0;
		
		red=new JSlider(0,255,0);
		red.setMajorTickSpacing(50);
		red.setPaintTicks(true);
		//red.setPaintLabels(true);
		blue=new JSlider(0,255,0);
		blue.setMajorTickSpacing(50);
		blue.setPaintTicks(true);
		blue.setPaintLabels(true);
		green=new JSlider(0,255,0);
		green.setMajorTickSpacing(50);
		green.setPaintLabels(true);
		green.setPaintTicks(true);
		JPanel p1=new JPanel(new GridLayout(3,2,0,0));
		p1.add(new JLabel("Red"));
		p1.add(red);
		p1.add(new JLabel("Green"));
		p1.add(green);
		p1.add(new JLabel("Blue"));
		p1.add(blue);
		p1.setBorder(BorderFactory.createTitledBorder("Select Color"));
		
		jbtOk=new JButton("Ok");
		jbtCancel=new JButton("Cancel");
		JPanel p2=new JPanel();
		p2.add(jbtOk);
		p2.add(jbtCancel);
		
		this.setLayout(new BorderLayout(0,0));
		this.add(p1,BorderLayout.CENTER);
		this.add(p2,BorderLayout.SOUTH);
		pack();
		//fit listener
		jbtOk.addActionListener(
		                            new ActionListener()
									{
										public void actionPerformed(ActionEvent e)
										{
											setVisible(false);
										}
									}
		                       );
		jbtCancel.addActionListener(
		                                new ActionListener()
										{
											public void actionPerformed(ActionEvent e)
											{
												setVisible(false);
											}
										}
		                           );
	    red.addChangeListener(
		                            new ChangeListener()
									{
										public void stateChanged(ChangeEvent e)
										{
											redValue=red.getValue();
											color=new Color(redValue,greenValue,blueValue);
										}
									}
		                     );
		green.addChangeListener(
		                            new ChangeListener()
									{
										public void stateChanged(ChangeEvent e)
										{
											greenValue=green.getValue();
											color=new Color(redValue,greenValue,blueValue);
										}
									}
		                     );
		blue.addChangeListener(
		                            new ChangeListener()
									{
										public void stateChanged(ChangeEvent e)
										{
											blueValue=blue.getValue();
											color=new Color(redValue,greenValue,blueValue);
										}
									}
		                      );
	}
	public Dimension getPreferredSize()
	{
		return new Dimension(500,400);
	}
	public Color getColor()
	{
		return color;
	}
}