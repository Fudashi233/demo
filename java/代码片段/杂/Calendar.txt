import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Date;
public class a
{
	public static void main(String[] args)
	{
		GregorianCalendar c=new GregorianCalendar();
		System.out.println("Current time:"+new Date());
		System.out.println(c.get(GregorianCalendar.YEAR));///c.  GregorianCalendar Calendar
		System.out.println(c.get(c.MONTH)+1);/////// 从零开始
		System.out.println(c.get(c.DATE));/////  XX日
		System.out.println(c.get(c.HOUR));
		System.out.println(c.get(c.HOUR_OF_DAY));//24小时制
		System.out.println(c.get(c.MINUTE));
		System.out.println(c.get(c.SECOND));
		System.out.println(week(c.get(c.DAY_OF_WEEK)));
		System.out.println(c.get(c.DAY_OF_MONTH));
		System.out.println(c.get(c.DAY_OF_YEAR));
		System.out.println(c.get(c.WEEK_OF_MONTH));
		System.out.println(c.get(c.WEEK_OF_YEAR));
		System.out.println(c.get(c.AM_PM));////0 上午 1 下午
		Calendar g=new GregorianCalendar(1995,9,2);
		//getTime() setTime()
		//set()  add()
		
	}
	public static String week(int i)
	{
		switch(i)
		{
			case 1:return "Sunday";
			case 2:return "Monday";
			case 3:return "Tuesday";
			case 4:return "Wednesday";
			case 5:return "Thursday";
			case 6:return "Friday";
			case 7:return "Saturday";
			default:
			{
				System.out.println("Error");
				return null;
			}
		}
	}
}


<span style="font-size:16px;">package demo.others;

import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

/*
 * 日历类简单例子,Calendar类不稳定,有延时性和容错性
 */
public class CalendarDemo {
	public static void main(String[] args) {
		simpleDemo();
		showCalendar();
		numberOfDays();
	}

	// Calendar常用方法示例
	public static void simpleDemo() {
		//当前日期
		Calendar c = new GregorianCalendar();
		//c.setTime(new Date());
		StringBuilder str = new StringBuilder();
		//获取当前日期的信息
		str.append("year:" + c.get(Calendar.YEAR));
		str.append("   month:" + (c.get(Calendar.MONTH) + 1));
		str.append("   day:" + c.get(Calendar.DAY_OF_MONTH));
		str.append("   week:" + (c.get(Calendar.DAY_OF_WEEK) - 1));
		str.append("   hour:" + c.get(Calendar.HOUR_OF_DAY));
		str.append("   minute:" + c.get(Calendar.MINUTE));
		str.append("   second:" + c.get(Calendar.SECOND));
		System.out.println(str);

		// 转换成Date对象
		Date d = Calendar.getInstance().getTime();
		System.out.println(d);
	}

	// 输出当前月的日历
	public static void showCalendar() {
		// 获得当前时间
		Calendar c = Calendar.getInstance();

		// 设置代表的日期为1号

		c.set(Calendar.DATE, 1);

		// 获得1号是星期几

		int start = c.get(Calendar.DAY_OF_WEEK);

		// 获得当前月的最大日期数

		int maxDay = c.getActualMaximum(Calendar.DATE);

		// 输出标题

		System.out.println("星期日 星期一 星期二 星期三 星期四 星期五   星期六");

		// 输出开始的空格

		for (int i = 1; i < start; i++) {

			System.out.print("      ");

		}

		// 输出该月中的所有日期

		for (int i = 1; i <= maxDay; i++) {

			// 输出日期数字

			System.out.print(" " + i);

			// 输出分隔空格

			System.out.print("   ");

			if (i < 10) {

				System.out.print(' ');

			}

			// 判断是否换行

			if ((start + i - 1) % 7 == 0) {

				System.out.println();

			}

		}

		// 换行

		System.out.println();

	}

	// 计算两个日期之间相差的天数
	public static void numberOfDays() {

		// 设置两个日期

		// 日期：2009年3月11号

		Calendar c1 = Calendar.getInstance();

		c1.set(2009, 3 - 1, 11);

		// 日期：2010年4月1号

		Calendar c2 = Calendar.getInstance();

		c2.set(2010, 4 - 1, 1);

		// 转换为相对时间

		long t1 = c1.getTimeInMillis();

		long t2 = c2.getTimeInMillis();

		// 计算天数

		long days = (t2 - t1) / (24 * 60 * 60 * 1000);

		System.out.println(days);
	}

}
</span>





import java.awt.GridLayout;
import java.awt.FlowLayout;
import java.awt.BorderLayout;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.util.Calendar;
import javax.swing.*;
public class a
{
	public static void main(String[] args)
	{
		MyCalendar frame=new MyCalendar();
		frame.setSize(300,400);
		frame.setLocationRelativeTo(null);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisible(true);
	}
}

class MyCalendar extends JFrame
{
	private JLabel[] week=new JLabel[7];
    private JLabel[] date=new JLabel[42];	//6*7=49
	private JTextField year;
	private JTextField month;
	public MyCalendar()
	{
		super("Windows");
		Calendar c=Calendar.getInstance();
		week[0]=new JLabel("Sunday");
		week[1]=new JLabel("Monday");
		week[2]=new JLabel("Tuesday");
		week[3]=new JLabel("Wednesday");
		week[4]=new JLabel("Thursday");
		week[5]=new JLabel("Friday");
		week[6]=new JLabel("Saturday");
		for(int i=0;i<date.length;i++)
			date[i]=new JLabel("   ");
		JPanel p1=new JPanel(new GridLayout(7,7,5,0));
		for(int i=0;i<week.length;i++)
			p1.add(week[i]);
		for(int i=0;i<date.length;i++)
			p1.add(date[i]);
		
		year=new JTextField(""+c.get(Calendar.YEAR),5);
		month=new JTextField(""+(c.get(Calendar.MONTH)+1),5);
		JPanel p2=new JPanel(new FlowLayout(FlowLayout.CENTER,5,20));
		p2.add(year);
		p2.add(month);
		
		this.setLayout(new BorderLayout(5,5));
		this.add(p1,BorderLayout.CENTER);
		this.add(p2,BorderLayout.SOUTH);
		month.addActionListener(
		                            new ActionListener()
									{
										public void actionPerformed(ActionEvent e)
										{
											c.set(Calendar.DAY_OF_MONTH,1);
											c.set(Calendar.YEAR,Integer.parseInt(year.getText()));
											c.set(Calendar.MONTH,Integer.parseInt(month.getText())-1);
											int start=c.get(Calendar.DAY_OF_WEEK);
											
											int maxDay=c.getActualMaximum(Calendar.DAY_OF_MONTH);
											System.out.println("---"+maxDay);
											int i=1;
											for( ;i<start;i++)
												date[i-1].setText("        ");
											for( ;i<maxDay+start;i++)
												date[i-1].setText("   "+(i-start+1));
											for( ;i<42;i++)
												date[i-1].setText("        ");
											System.out.println("---");	
										}
									}
		                        );
	}
}