//decimal
//hexadecimal
//octonary
//binary

public class a
{
	public static void main(String[] args)
	{
		System.out.println(hexToDec("4D2"));
	}
	//////////////////////////
/* 	public static String decToHex(int x)
	{
		char temp;
		String result="";
		while(x!=0)		
		{
			temp=transform(x%16);
			System.out.println("-----"+temp);
			result=temp+result+"\t";
			x/=16;
		}
		return result;
		
	}
	public static char transform(int x)
	{
		if(x>9)
			return (char)('A'+x-10);
		else
			return (char)(x+'0');
	} */
	/////////////////////////
	public static int hexToDec(String x)
	{
		int temp;
		int result=0;
		x.toUpperCase();
		for(int i=0;i<x.length();i++)
		{
			temp=transform(x.charAt(i));
			result=result*16+temp;
		}
		return result;
	}
	public static int transform(char x)
	{
		if(x>='A')
			return x-'A'+10;
		else
			return x-'0';
	}
}




import javax.swing.JApplet;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JPanel;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MyApplet extends JApplet
{
	public MyApplet()
	{
		this.add(new Panel());
	}
}
class Panel extends JPanel
{
	private JTextField bin;//binary
	private JTextField oct;//octal
	private JTextField dec;//decimal
	private JTextField hex;//hexdecimal
	public Panel()
	{
		this.setLayout(new GridLayout(4,2,0,0));
		
		bin=new JTextField(20);
		this.add(new JLabel("Binary"));
		this.add(bin);
		
		oct=new JTextField(20);
		this.add(new JLabel("Octal"));
		this.add(oct);
		
		dec=new JTextField(20);
		this.add(new JLabel("Decimal"));
		this.add(dec);
		
		hex=new JTextField(20);
		this.add(new JLabel("hexdecimal"));
		this.add(hex);
		//fit listener
		bin.addActionListener(
		                        new ActionListener()
								{
									public void actionPerformed(ActionEvent e)
									{
										int decimal=toDecimal(2,bin.getText());
										String stOct=toRadix(8,decimal);
										String stHex=toRadix(16,decimal);
										oct.setText(stOct);
										dec.setText(String.valueOf(decimal));
										hex.setText(stHex);
										
									}
								}
		                     );
		oct.addActionListener(
		                        new ActionListener()
								{
									public void actionPerformed(ActionEvent e)
									{
										int decimal=toDecimal(8,oct.getText());
										String stBin=toRadix(2,decimal);
										String stHex=toRadix(16,decimal);
										bin.setText(stBin);
										dec.setText(String.valueOf(decimal));
										hex.setText(stHex);
									}
								}
		                     );
	    dec.addActionListener(
		                        new ActionListener()
								{
									public void actionPerformed(ActionEvent e)
									{
										int decimal=toDecimal(10,dec.getText());
										String stBin=toRadix(2,decimal);
										String stOct=toRadix(8,decimal);
										String stHex=toRadix(16,decimal);
										bin.setText(stBin);
										oct.setText(stOct);
										hex.setText(stHex);
									}
								}
		                     );
	    hex.addActionListener(
		                        new ActionListener()
								{
									public void actionPerformed(ActionEvent e)
									{
										int decimal=toDecimal(16,hex.getText());
										String stBin=toRadix(2,decimal);
										String stOct=toRadix(8,decimal);
										bin.setText(stBin);
										oct.setText(stOct);
										dec.setText(String.valueOf(decimal));
										
									}
								}
		                     );
	}
	public int toDecimal(int radix,String st)
	{
	    int result=0;
		int num;
		for(int i=0;i<st.length();i++)
		{
			num=toNumber(st.charAt(i));
			result=num+result*radix;
		}
		return result;
	}
	public String toRadix(int radix,int decimal)
	{
		String st="";
		while(decimal!=0)
		{
			st=toChar(decimal%radix)+st;////
			decimal/=radix;
		}
		return st;
	}
	public int toNumber(char ch)
	{
		Character.toUpperCase(ch);
		if(ch>='A')
			ch=(char)(ch-'A'+10);
		else
			ch-='0';
		return ch;
	}
	public char toChar(int x)
	{
		if(x>=10)
			x=x-10+'A';
		else
			x+='0';
		return (char)x;	
	}
}