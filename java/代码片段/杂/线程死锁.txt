    <span style="font-size:18px;">package synchronization.java.test;  
    /** 
     * 关于java中线程死锁例子 
     * 在学习操作系统的时候有线程死锁但是也只是理解也没有亲自动手敲过 
     * 现在学java既然学到这里了就敲了一个简单的以进餐为例的代码 
     * @author hello 
     * @version 8 
     */  
    public class DeadLock {  
         static String knife="餐刀",fork="叉子";   
          static class A extends Thread{  
             public void run(){  //重写的方法  
                 synchronized(knife){//  
                     System.out.println("小明拿到了"+knife+"等待"+fork+".........");  
                     try {  
                        Thread.sleep(100);  
                    } catch (InterruptedException e) {  
                        e.printStackTrace();  
                    }  
                     synchronized(fork){//这是用来测试的事实上由于死锁了这一步永远也不会出现  
                         System.out.println("小明又拿到"+fork);  
                     }  
                 }  
             }  
         }  
         static class B extends Thread{  
             public void run(){  
                 synchronized(fork){  
                     System.out.println("小华拿到了"+fork+"等待"+knife+".........");  
                     try {  
                        Thread.sleep(100);  
                    } catch (InterruptedException e) {  
                        e.printStackTrace();  
                    }  
                     synchronized(knife){//这是用来测试的事实上由于死锁了这一步永远也不会出现  
                         System.out.println("小华又拿到"+knife);  
                    }  
                 }  
             }  
         }  
         static class Demo extends  Thread{  
             public Demo(){  
                 this.setDaemon(true);  
             }  
             public void run(){  
                 while(true){  
                     try {  
                        Thread.sleep(1000);  
                    } catch (InterruptedException e) {  
                        e.printStackTrace();  
                    }//这个线程一直在运行  
                     System.out.println("程序正在运行中......");  
                 }  
             }  
               
         }  
        public static void main(String[] args) {  
             new A().start();//由于是静态的直接new就行  
             new B().start();  
             new Demo().start();  
      
        }  
      
    }  