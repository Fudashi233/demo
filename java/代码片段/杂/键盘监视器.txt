import java.awt.FlowLayout;
import java.awt.event.*;
import javax.swing.*;
import java.awt.Graphics;
import java.awt.Dimension;
import java.awt.Font;
public class a
{
	public static void main(String[] args)
	{
		MyFrame frame=new MyFrame();
		frame.setSize(400,300);
		frame.setLocationRelativeTo(null);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.pack();
		frame.setVisible(true);
	}
}
class MyPanel  extends JPanel
{
	public char ch_;
	public int x_;
	public int y_;
	public MyPanel()
	{
		ch_='A';
		x_=100;
		y_=100;
	}
	public MyPanel(char ch,int x,int y)
	{
		ch_=ch;
		x_=x;
		y_=y;
	}
	public void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		g.drawString(String.valueOf(ch_),x_,y_);
		System.out.println("Paint Over");
		
	}
	public Dimension getPreferredSize()
	{
		return new Dimension(300,250);
	}
}
class MyFrame extends JFrame
{
	private MyPanel p;
	public MyFrame()
	{
		p=new MyPanel();
		add(p);
		p.setFocusable(true);//////asdfasdasdfasd
		//fit listener;
		p.addKeyListener(
		                    new KeyAdapter()
							{
								public void keyPressed(KeyEvent e)
								{
									switch(e.getKeyCode())
									{
										case KeyEvent.VK_UP:p.y_-=10;break;
										case KeyEvent.VK_DOWN:p.y_+=10;break;
										case KeyEvent.VK_LEFT:p.x_-=10;break;
										case KeyEvent.VK_RIGHT:p.x_+=10;break;
										default:p.ch_=e.getKeyChar();
									}
									repaint();
								}
							}
		                );
	}
}




import java.awt.FlowLayout;
import java.awt.event.*;
import javax.swing.*;
import java.awt.Graphics;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.BorderLayout;
public class a
{
	public static void main(String[] args)
	{
		MyFrame frame=new MyFrame();
		frame.setSize(400,300);
		frame.setLocationRelativeTo(null);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.pack();
		frame.setVisible(true);
	}

}



class MyPanel extends JPanel
{
	public int xCoordinate_;
	public int yCoordinate_;
	public int radius_;
	public MyPanel()
	{
		xCoordinate_=200;
		yCoordinate_=150;
		radius_=20;
	}
	public MyPanel(int x,int y,int r)
	{
		xCoordinate_=x;
		yCoordinate_=y;
		radius_=r;
	}
	public Dimension getPreferredSize()
	{
		return new Dimension(400,200);
	}
	protected void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		g.drawOval(xCoordinate_,yCoordinate_,radius_*2,radius_*2);
		System.out.println("paint over");
	}
}
class MyFrame extends JFrame
{
	private MyPanel p;
	private JButton jbtUp;
	private JButton jbtDown;
	private JButton jbtRight;
	private JButton jbtLeft;
	public MyFrame()
	{
		super("Windows");
		p=new MyPanel();
	    p.setFocusable(true);                       //asdas
		jbtUp=new JButton("Up");
		jbtDown=new JButton("Down");
		jbtRight=new JButton("Right");
		jbtLeft=new JButton("Left");
		
		JPanel p1=new JPanel(new BorderLayout(5,5));
		p1.add(jbtUp,BorderLayout.NORTH);
		p1.add(jbtDown,BorderLayout.CENTER);
		p1.add(jbtRight,BorderLayout.EAST);
		p1.add(jbtLeft,BorderLayout.WEST);
		
		setLayout(new BorderLayout(5,5));
		this.add(p1,BorderLayout.SOUTH);
		this.add(p,BorderLayout.CENTER);
		
		///Fit listener
		jbtUp.addActionListener(
		                            new ActionListener()
									{
										public void actionPerformed(ActionEvent e)
										{
											p.yCoordinate_-=10;
											repaint();
										}
									}
		                        );
		jbtDown.addActionListener(
		                            new ActionListener()
									{
										public void actionPerformed(ActionEvent e)
										{
											p.yCoordinate_+=10;
											repaint();
										}
									}
		                         );
	    jbtRight.addActionListener(
		                            new ActionListener()
									{
										public void actionPerformed(ActionEvent e)
										{
											p.xCoordinate_+=10;
											repaint();
										}
									}
		                           );
	    jbtLeft.addActionListener(
		                            new ActionListener()
									{
										public void actionPerformed(ActionEvent e)
										{
											p.xCoordinate_-=10;
											repaint();
										}
									}									
		                         );
		p.addKeyListener(
		                    new KeyAdapter()
							{
								public void keyPressed(KeyEvent e)
								{
									switch(e.getKeyCode())
									{
										case KeyEvent.VK_UP:p.yCoordinate_-=10;break;
										case KeyEvent.VK_DOWN:p.yCoordinate_+=10;break;
										case KeyEvent.VK_LEFT:p.xCoordinate_-=10;break;
										case KeyEvent.VK_RIGHT:p.xCoordinate_+=10;break;
									}
									repaint();
								}
							}
		                );
								 
	}
}