package cn.edu.jxau;

import javax.swing.JLabel;
import javax.swing.JSpinner;
import javax.swing.JApplet;
import javax.swing.SpinnerDateModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.SpinnerListModel;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Date;

import java.awt.GridLayout;

import java.text.DateFormatSymbols;

public class Test extends JApplet
{
	private JSpinner date;
	private JSpinner day;
	private JSpinner month;
	private JSpinner year;
	public Test()
	{
		date = new JSpinner(new SpinnerDateModel());
		day = new JSpinner(new SpinnerNumberModel(1,1,31,1));
		DateFormatSymbols instance=new DateFormatSymbols();
		Object[] months = instance.getMonths();
		month = new JSpinner(new SpinnerListModel(months));
		year = new JSpinner(new SpinnerNumberModel(2015,1,3000,1));
		JSpinner.DateEditor dateEditor = new JSpinner.DateEditor(date,"MM-dd-yyyy");
		date.setEditor(dateEditor);
		setUI();
		addListener();
	}
	private void setUI()
	{
		this.setLayout(new GridLayout(4,2,0,0));
		this.add(new JLabel("Date"));
		this.add(date);
		
		this.add(new JLabel("Day"));
		this.add(day);
		
		this.add(new JLabel("Month"));
		this.add(month);
		
		this.add(new JLabel("Year"));
		this.add(year);
	}
	private void addListener()
	{
		date.addChangeListener(
				                   new ChangeListener()
				                   {
				                	   public void stateChanged(ChangeEvent e)
				                	   {
				                		   update();
				                	   }
				                   }
				              );
		day.addChangeListener(
				                  new ChangeListener()
				                  {
				                	  public void stateChanged(ChangeEvent e)
				                	  {
				                		  update();
				                	  }
				                  }
				             );
		month.addChangeListener(
				                     new ChangeListener()
				                     {
				                    	 public void stateChanged(ChangeEvent e)
				                    	 {
				                    		 update();
				                    	 }
				                     }
				                );
		year.addChangeListener(
				                   new ChangeListener()
				                   {
				                	   public void stateChanged(ChangeEvent e)
				                	   {
				                		   update();
				                	   }
				                   }
				              );
		
	}
	private void update()
	{
		 int m = ((SpinnerListModel)month.getModel()).getList().indexOf(month.getValue());
		 int y = ((Integer)year.getValue()).intValue();
		 int maxDay = maxDayInMonth(y,m);
		 int d = ((Integer)day.getValue()).intValue();
		 if(d>maxDay)
			 day.setValue(maxDay);
		 System.out.println(""+y+"---"+m+"---"+d);
		 date.setValue(new GregorianCalendar(y,m,d).getTime());
	}
	private int maxDayInMonth(int year,int month)
	{
	    Calendar calendar = new GregorianCalendar(year,month,1);
	    return calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
	}
}