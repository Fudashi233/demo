import java.awt.Graphics;
import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.FlowLayout;

import javax.swing.JApplet;
import javax.swing.JPanel;
import javax.swing.Timer;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
public class AppletTest extends JApplet
{
	private Flag flag1;
	private Flag flag2;
	private Timer timer;
	public AppletTest()
	{
		flag1=new Flag();
		flag2=new Flag();
		this.setLayout(new FlowLayout(FlowLayout.CENTER,0,0));
		this.add(flag1);
		this.add(flag2);
		
		ExecutorService executor=Executors.newCachedThreadPool();
		executor.execute(new RaiseFlag());
		timer=new Timer(50,new TimeListener());
		timer.start();
	}
	private class TimeListener implements ActionListener
	{
		public void actionPerformed(ActionEvent e)
		{
			flag1.repaint();
			//flag2.repaint();
		}
	}
	private class RaiseFlag implements Runnable
	{
		public void run()
		{
			while(true)
			{
				try
				{
					Thread.sleep(50);
				}
				catch(InterruptedException ex)
				{
					System.out.println(ex);
				}
				finally
				{
					flag2.repaint();
				}
			}
		}
	}
}
class Flag extends JPanel
{
	public int vertaxX;
	public int vertaxY;
	public int IY;//increament y;
	public Flag()
	{
		vertaxX=100;
		vertaxY=200;
		IY=5;
	}
	public Flag(int vertaxX,int vertaxY,int IY)
	{
		this.vertaxX=vertaxX;
		this.vertaxY=vertaxY;
		this.IY=IY;
	}
	protected void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		if(vertaxY<10)
		    IY=Math.abs(IY);
		if(vertaxY>190)
			IY=-Math.abs(IY);
		vertaxY+=IY;
		
		g.drawLine(vertaxX,0,vertaxX,this.getHeight());  //flagpole
		
		g.drawLine(vertaxX,vertaxY,vertaxX+40,vertaxY);
		g.drawLine(vertaxX,vertaxY+30,vertaxX+40,vertaxY);
	}
	public Dimension getPreferredSize()
	{
		return new Dimension(200,250);
	}
}