import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;
import javax.swing.JApplet;
import javax.swing.JTabbedPane;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.CardLayout;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class MyApplet extends JApplet
{
	/* private CalculationPanel integer;
	private CalculationPanel rational;
	private CardLayout cardLayout;/////////
	public MyApplet()
	{
		integer=new CalculationPanel("Integer Calculation");
		rational=new CalculationPanel("Rational Calculation");	
		cardLayout=new CardLayout(10,10);
		JPanel p1=new JPanel(cardLayout);
		p1.add(integer,"Integer Calculation");
		p1.add(rational,"Rational Calculation");
		
		JComboBox jcbo=new JComboBox(new Object[]{"Integer Calculation","Rational Calculation"});
		
		this.add(jcbo,BorderLayout.NORTH);
		this.add(p1,BorderLayout.CENTER);
		//fit listener
		jcbo.addItemListener(
		                        new ItemListener()
								{
									public void itemStateChanged(ItemEvent e)
									{
										cardLayout.show(p1,(String)e.getItem());
									}
								}
		                    );
	    //fit listener
		integer.add.addActionListener(new IntegerListener());
		integer.sub.addActionListener(new IntegerListener());
		integer.mul.addActionListener(new IntegerListener());
		integer.div.addActionListener(new IntegerListener());
		rational.add.addActionListener(new RationalListener());
		rational.sub.addActionListener(new RationalListener());
		rational.mul.addActionListener(new RationalListener());
		rational.div.addActionListener(new RationalListener());
	} */
	private CalculationPanel integer;
	private CalculationPanel rational;
	private JTabbedPane tabbed;
	public MyApplet()
	{
		integer=new CalculationPanel("Integer Calculation");
		rational=new CalculationPanel("Rational Calculation");	
		tabbed=new JTabbedPane(JTabbedPane.LEFT);
		tabbed.add(integer,"Integer Calculation");
		tabbed.add(rational,"Rational Calculation");
		
		
		this.add(tabbed,BorderLayout.CENTER);
		//fit listener
		integer.add.addActionListener(new IntegerListener());
		integer.sub.addActionListener(new IntegerListener());
		integer.mul.addActionListener(new IntegerListener());
		integer.div.addActionListener(new IntegerListener());
		rational.add.addActionListener(new RationalListener());
		rational.sub.addActionListener(new RationalListener());
		rational.mul.addActionListener(new RationalListener());
		rational.div.addActionListener(new RationalListener());
	}
	class IntegerListener implements ActionListener
	{
		public void actionPerformed(ActionEvent e)
		{
			int num1=Integer.parseInt(integer.num1.getText());
			int num2=Integer.parseInt(integer.num2.getText());
			if(e.getSource()==integer.add)
			{
				int result=num1+num2;
				integer.res.setText(String.valueOf(result));
			}
			else if(e.getSource()==integer.sub)
			{
				int result=num1-num2;
				integer.res.setText(String.valueOf(result));
			}
			else if(e.getSource()==integer.mul)
			{
				int result=num1*num2;
				integer.res.setText(String.valueOf(result));
			}
			else if(e.getSource()==integer.div)
			{
				double result=(num1*1.0)/num2;////
				integer.res.setText(String.valueOf(result));			
			}
			else
			{
				System.exit(0);
			}
		}
	}
	class RationalListener implements ActionListener
	{
		public void actionPerformed(ActionEvent e)
		{
			Rational num1=new Rational(rational.num1.getText());
			Rational num2=new Rational(rational.num2.getText());
			if(e.getSource()==rational.add)
			{
				Rational result=new Rational();
				result.numerator=num1.numerator*num2.denominator+num2.numerator*num1.denominator;
				result.denominator=num1.denominator*num2.denominator;
				rational.res.setText(result.toString());
			}
			else if(e.getSource()==rational.sub)
			{
				Rational result=new Rational();
				result.numerator=num1.numerator*num2.denominator-num2.numerator*num1.denominator;
				result.denominator=num1.denominator*num2.denominator;
				rational.res.setText(result.toString());
			}
			else if(e.getSource()==rational.mul)
			{
				Rational result=new Rational();
				result.numerator=num1.numerator*num2.numerator;
				result.denominator=num1.denominator*num2.denominator;
				rational.res.setText(result.toString());
			}
			else if(e.getSource()==rational.div)
			{
				Rational result=new Rational();
				result.numerator=num1.numerator*num2.denominator;
				result.denominator=num2.numerator*num1.denominator;
				rational.res.setText(result.toString());
			}
			else 
			{
				System.exit(0);
			}
		}
	}
}
class CalculationPanel extends JPanel
{
	public JButton add;
	public JButton sub;
	public JButton mul;
	public JButton div;
	public JTextField num1;
	public JTextField num2;
	public JTextField res;//result
	public CalculationPanel(String title)
	{
		num1=new JTextField(10);
		num2=new JTextField(10);
		res=new JTextField(10);
		JPanel p1=new JPanel(new GridLayout(3,2));
		p1.setBorder(new TitledBorder(title));
		p1.add(new JLabel("Number 1"));
		p1.add(num1);
		p1.add(new JLabel("Number 2"));
		p1.add(num2);
		p1.add(new JLabel("Result"));
		p1.add(res);
		
		add=new JButton("Add");
		sub=new JButton("Subtract");
		mul=new JButton("Multiply");
		div=new JButton("Divide");
		JPanel p2=new JPanel();
		p2.add(add);
		p2.add(sub);
		p2.add(mul);
		p2.add(div);
		
		this.setLayout(new BorderLayout(5,5));
		this.add(p1,BorderLayout.CENTER);
		this.add(p2,BorderLayout.SOUTH);
	}
}
class Rational
{
	public int numerator;
	public int denominator; 
	public Rational()
	{
		numerator=0;
		denominator=1;
	}
	public Rational(String st)
	{
		String temp[]=st.split("/");
		numerator=Integer.parseInt(temp[0]);
		denominator=Integer.parseInt(temp[1]);	
	}
	public String toString()
	{
		int gcd=this.getGcd();
		if(gcd!=0)
		{
			numerator=numerator/gcd;
			denominator=denominator/gcd;
		} 
		if(numerator==denominator)
			return "1"; 
		if(numerator==0)
			return "0";
		return ""+numerator+"/"+denominator;
	}
	public int getGcd()
	{
		int temp=0;
		int a=numerator;
		int b=denominator;
		while(b!=0)
		{
			temp=a%b;
			a=b;
			b=temp;
		}
		return a;
	}
}


class Number
{
	public int numerator;
	public int denominator;
	public double number;
	public boolean flag;  //false--number   true--rational;
	public Number()
	{
		numerator=0;
		denominator=1;
		number=0;
		flag=false;
	}
	public Number(String st)
	{
		if(st.indexOf('/')==-1)
		{
			number=Double.parseDouble(st);
			numerator=0;
			denominator=1;
			flag=false;
		}
		else
		{
			String[] temp=st.split("/");
			numerator=Integer.parseInt(temp[0]);
			denominator=Integer.parseInt(temp[1]);
			number=0;
			flag=true;
		}
	}
	public String toString()
	{
		if(flag)
		{   
	        int gcd=this.getGcd();
		    if(gcd!=0)
		    {
			    numerator=numerator/gcd;
			    denominator=denominator/gcd;
		    } 
		    if(numerator==denominator)
			    return "1"; 
		    if(numerator==0)
			    return "0";
	    	return ""+numerator+"/"+denominator;
		}
		else
			return ""+number;
	}
	public int getGcd()
	{
		int temp=0;
		int a=numerator;
		int b=denominator;
		while(b!=0)
		{
			temp=a%b;
			a=b;
			b=temp;
		}
		return a;
	}
}

